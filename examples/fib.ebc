;; This file demonstrats finding the fibonnaci series using function calls
;; This version is significantly slower than the loop. This version can't get
;; to the largest int64 fib number.

main:       PUSHI 36    ; Push argument to fib(), series number to find
            CALL %fib   ; Call fib()
            PRINT       ; Print result
            EXIT 0

fib:        SWAP                ; Swap return address with argument
            JMPEQ %fibReturn    ; If # is zero, return 0
            DUP                 ; Duplicate TOS (function parameter)
            PUSHI 1
            SUB                 ; Subtract 1 from series #
            JMPEQ %fibOne       ; If equal to zero, return 1
            CALL %fib           ; Call fib() recursivly, using the difference as the argument
            SWAP                ; Swap returned value with previous A
            PUSHI 2
            SUB                 ; Subtract 2 from series #
            CALL %fib           ; Call fib() again, using the difference as the argument
            ADD                 ; Add the two returned values
            JMP %fibReturn      ; Return

fibOne:     POP                 ; Pop an extra value

fibReturn:  SWAP                ; Move return address to TOS
            RET                 ; Return to caller